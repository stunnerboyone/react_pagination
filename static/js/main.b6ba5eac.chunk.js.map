{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","handleChangePage","length","items","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","firstItemIndex","lastItemIndex","currentItems","slice","id","defaultValue","onChange","event","preventDefault","target","value","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAoBnD,OACE,8BACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBP,IAHhB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QApBa,WACD,IAAhBT,GACFC,EAAaD,EAAc,IAavB,oBAWDE,EAAWQ,KAAI,SAAAC,GAAI,OAClB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAASX,IAJvB,SAOE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAlDI,SAACE,GACpBA,IAASX,GACXC,EAAaU,GAgDUE,CAAiBF,IAJlC,SAMGA,KAZEA,MAiBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUP,IAAgBE,EAAWY,SAH3C,SAME,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAWY,OAC1CL,QA9Da,WACjBT,IAAgBE,EAAWY,QAC7Bb,EAAaD,EAAc,IAuDvB,0BC3EJe,EAAQxB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBoB,EAApB,KAEMtB,EAAQiB,EAAMD,OAEdO,GAAkBrB,EAAc,GAAKkB,EACrCI,EAAgBD,EAAiBH,EACjCK,EAAeR,EAAMS,MACzBH,EACAC,GASF,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCqB,EAAiB,EADlD,cACyDvB,EAAQwB,EAAgBxB,EAAQwB,EADzF,eAC6GxB,EAD7G,OAIA,sBAAKO,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,aAAc,EACdC,SArBS,SAACC,GAClBA,EAAMC,iBACNV,GAAiBS,EAAME,OAAOC,OAC9BX,EAAe,IAaT,SAxBa,CAAC,EAAG,EAAG,GAAI,IA+BRV,KAAI,SAAAsB,GAAM,OACtB,wBAAQD,MAAOC,EAAf,SAAqCA,GAATA,UAKlC,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOA,EACPC,QAASmB,EACTlB,YAAaA,EACbC,aAAcmB,IAGhB,6BACGG,EAAab,KAAI,SAACwB,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCjEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b6ba5eac.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = getNumbers(1, Math.ceil(total / perPage));\n\n  const handleChangePage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage !== pagesCount.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <div>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {pagesCount.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              { active: page === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handleChangePage(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === pagesCount.length },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pagesCount.length}\n            onClick={handleNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getNumbers } from './utils';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n  const perPageItems = [3, 5, 10, 20];\n  const firstItemIndex = (currentPage - 1) * itemsPerPage;\n  const lastItemIndex = firstItemIndex + itemsPerPage;\n  const currentItems = items.slice(\n    firstItemIndex,\n    lastItemIndex,\n  );\n\n  const getPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${total < lastItemIndex ? total : lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={5}\n            onChange={getPerPage}\n          >\n            {perPageItems.map(option => (\n              <option value={option} key={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map((item) => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}